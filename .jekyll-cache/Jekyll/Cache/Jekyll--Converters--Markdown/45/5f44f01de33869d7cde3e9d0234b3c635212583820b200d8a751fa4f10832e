I"R<p>정렬 알고리즘은 N개의 숫자가 주어졌을 때, 사용자가 지정한 기준에 맞게 정렬하는 알고리즘을 말한다.</p>

<h3 id="잠깐-집고-넘어가기">🤚🏻 잠깐, 집고 넘어가기</h3>

<p>정렬 알고리즘에 대해 설명하기 전에 아래 개념을 알아두자.</p>

<ul>
  <li>stable : 중복된 키 값이 있을 때, 해당 값들이 처음 나타난 순서대로 정렬됨</li>
  <li>not stable : 중복된 키 값이 있을 때, 해당 값들의 상대적인 순서가 보장되지 않음</li>
  <li>in place : 추가적인 저장 공간을 상수 시간 내에 고정된 양만 사용함</li>
  <li>not in place : 추가적인 저장 공간을 원소들의 갯수에 비례하여 사용함</li>
</ul>

<h4 id="1-ㄴ">1. ㄴ</h4>

<p>또한 정렬 알고리즘은 실행 방법과 정렬 장소에 따라 아래와 같이 분류할 수 있다.</p>

<h4 id="1-실행-방법에-따른-분류">1. 실행 방법에 따른 분류</h4>

<p>정렬 알고리즘 실행 방법에 따라 비교식 정렬(Comparative Sort), 분산식 정렬(Distribute Sort)로 분류할 수 있다.</p>

<ul>
  <li>Comparative Sort(비교식 정렬) : 비교식 정렬은 비교하고자하는 각 키값들을 한번에 두개씩 비교하는 교환 방식을 말한다. 대부분의 정렬 알고리즘이 비교식 정렬에 해당된다.
    <ul>
      <li>버블 정렬, 선택 정렬, 삽입 정렬, 퀵 정렬, 병합 정렬, 힙 정렬 등</li>
    </ul>
  </li>
  <li>Distribute Sotr(분산식 정렬) : 분산식 정렬은 키값을 기준으로 하여 자료를 여러 개의 부분 집합으로 분해하고, 분해한 집합들간의 비교, 교환, 이동 등의 작업을 통해 정렬하는 방식이다. 대부분의 비교식 정렬보다는 더 빠른 속도를 보인다는 장점이 있다.
    <ul>
      <li>기수 정렬, 버킷 정렬, 카운팅 정렬 등</li>
    </ul>
  </li>
</ul>

<h4 id="2-정렬-장소에-따른-분류">2. 정렬 장소에 따른 분류</h4>

<p>정렬 알고리즘 장소에 따라 내부 정렬(Internal Sort), 외부 정렬(External Sort)로 분류할 수 있다.</p>

<ul>
  <li>Internal Sort(내부 정렬) : 내부 정렬은 정렬할 자료를 메인 메모리에 올려서 정렬하는 방식으로, 속도가 빠르지만 자료의 양이 메모리의 용량에 따라 제한된다는 단점이 있다.
    <ul>
      <li>버블 정렬, 선택정렬, 삽입 정렬, 퀵 정렬, 병합 정렬, 힙 정렬 등</li>
    </ul>
  </li>
  <li>External Sort(외부 정렬) : 외부 정렬은 정렬할 자료를 보조 기억 장치에서 정렬하는 방식이다. 내부 정렬보다는 속도는 떨어지지만 대용량의 자료에 대한 정렬이 가능하다는 장점이 있다.
    <ul>
      <li>병합 정렬 등</li>
    </ul>
  </li>
</ul>

<h3 id="-정렬-알고리즘">🥕 정렬 알고리즘</h3>

:ET